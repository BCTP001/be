# SEARCH BOOKS

input SearchOption {
  searchQuery: String!
  queryType: String
  sort: String
  maxResult: String
}

# GET BOOK INFO

input GetBookInfoRequest {
  isbn13: String!
}

type Author {
  authorType: String
  authorid: Int
  desc: String
  name: String
}

type Ebook {
  itemId: Int
  isbn: String
  priceSales: Int
  link: String
}

type Bookinfo {
  subTitle: String
  originalTitle: String
  itemPage: Int
  toc: String
  letslookimg: [String]
  author: [Author]
  ebookList: [Ebook]
}

type GetBookInfoItem {
  title: String
  link: String
  author: String
  pubDate: String
  description: String
  creator: String
  isbn: String
  isbn13: String
  itemId: Int
  priceSales: Int
  priceStandard: Int
  stockStatus: String
  mileage: Int
  cover: String
  categoryId: Int
  categoryName: String
  publisher: String
  customerReivewRank: Int
  bookinfo: Bookinfo
}

# RECOMMEND BOOK LIST

type recommendBookListResponse {
  queryType: String
  data: [GetBookInfoItem]
}

type Query {
  searchBooksAndGetBookInfo(searchOption: SearchOption): [GetBookInfoItem]
  getBookInfo(getBookInfoRequest: GetBookInfoRequest): GetBookInfoItem
  getRecommendBookList: recommendBookListResponse
  user(id: ID): User
  users: [User]!
}

type Mutation {
  createUser(username: String!, name: String!): User
}

type User {
  id: ID!
  username: String!
  name: String!
}
